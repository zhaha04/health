<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">
<!--
【重要】【重要】【重要】
这里面的所有路径必须以/开头，否则启动报错
-->


<!--  静态资源匿名访问，不需要登陆
  pattern="/img/**" 过滤的路径
  security="none"  不需要进行security处理,匿名或放行
  -->
    <security:http pattern="/img/**" security="none"/>
    <security:http pattern="/login.html" security="none"/>
    <security:http pattern="/fail.html" security="none"/>

<!--  auto-config: 自动配置，自动生成login页面，login处理，退出处理
        use-expressions: 是否使用spel表达式 true: access的值可以填表达式(hasRole, hasAuthority, hasAny....)
                         false: ROEL_角色名(必须是ROLE_打，否则启动报错), 或 security写死的几个常量

 -->
<!--  拦截规则配置  -->
    <security:http auto-config="true" use-expressions="true">
<!--  pattern="/**" 拦截所有的路径  access="ROLE_ADMIN"
      要访问符合pattern的url时，登陆用户必须有ROLE_ADMIN的角色，如果没有则不能访问

      security:intercept-url： 可以配置多个
 -->
        <security:intercept-url pattern="/**" access="isAuthenticated()"/>

<!--   登陆配置 form-login
login-page: 登陆页面
username-parameter: 前端传过来的用户名的参数名
password-parameter: 前端传过来的密码的参数名
login-processing-url: 处理登陆请求的url
default-target-url: 登陆成功后默认跳转的页面, success.html -> login.html->success.html
always-use-default-target: true不管是从哪个页面转到login.html，登陆后都跑到default-target-url
    success.html -> login.html-> index.html
authentication-failure-url: 登陆失败后跳转的页面
-->
        <security:form-login
            login-page="/login.html"
            username-parameter="abc"
            password-parameter="bbb"
            login-processing-url="/login"
            default-target-url="/index.html"
            always-use-default-target="true"
            authentication-failure-url="/fail.html"
        ></security:form-login>
<!--   关闭防跨域攻击限制     -->
        <security:csrf disabled="true"/>
<!--   invalidate-session 失效
     logout-url退出时请求的地址
     logout-success-url:  退出成功跳转页面
-->
        <security:logout logout-url="/logout" invalidate-session="true" logout-success-url="/login.html"></security:logout>
    </security:http>

<!--  开启权限控制注解支持  -->
    <security:global-method-security pre-post-annotations="enabled"/>

<!--  认证管理器  -->
    <security:authentication-manager>
<!--  认证信息提供者，认证信息的来源
      提供登陆用户信息  用户名、密码、权限集合
      user-service-ref 指向spring容器中一个bean对象, 实现这个UserDetailsService的对象, 提供用户的名称、密码、权限集合

      一旦配置了user-service-ref，就不要配置security:user-service
-->
        <security:authentication-provider user-service-ref="userService">
<!--    校验密码 前端传过来的及数据库返回的密码，数据库的密码，不需要加{noop}        -->
            <security:password-encoder ref="encoder"/>
        </security:authentication-provider>
    </security:authentication-manager>



    <bean id="userService" class="com.itheima.security.UserService"/>
<!--  注册 密码加密器  -->
    <bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>


    <context:component-scan base-package="com.itheima"/>
    <mvc:annotation-driven></mvc:annotation-driven>
</beans>